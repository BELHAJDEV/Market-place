{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Electro-Marke.ma\\\\Documents\\\\React-JS\\\\market-place-app\\\\src\\\\components\\\\contactRoom\\\\Room.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport './room.css';\nimport { useParams } from 'react-router-dom';\nimport Avatar from '@material-ui/core/Avatar';\nimport { db } from '../../Firebase';\nimport { SideBarContext } from '../../contexts/SideBarContext';\nimport Zoom from 'react-reveal/Zoom';\nimport firebase from 'firebase/compat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Room() {\n  _s();\n\n  const [sellerName, setSellerName] = useState('');\n  const {\n    value2\n  } = useContext(SideBarContext);\n  const [activeUser, setActiveUser] = value2;\n  const [message, setMessage] = useState('');\n  const [getMessages, setGetMessages] = useState([]);\n  const [valid, setValid] = useState(true);\n  let {\n    id\n  } = useParams();\n  let content = [];\n  useEffect(() => {\n    db.collection('posts').doc(id).onSnapshot(snapshot => {\n      setSellerName(snapshot.data().username);\n    });\n    return () => {\n      setSellerName('');\n    };\n  }, [id]);\n\n  const getData = async () => {\n    db.collection('posts').doc(id).collection('rooms').orderBy('timestamp', 'asc').onSnapshot(snapshot => snapshot.docs.map(doc => {\n      if (activeUser || doc.data().timestamp) {\n        // if((doc.data().sender.toLowerCase() === activeUser.toLowerCase()) ||\n        // (doc.data().sender.toLowerCase() === sellerName.toLowerCase())){\n        content.push(doc.data());\n        setGetMessages([doc.data(), ...content]); // }\n      }\n\n      return getMessages;\n    }));\n  };\n\n  useEffect(() => {\n    getData();\n  }, [id]);\n\n  const hundleChange = e => {\n    // e.preventDefault();\n    setMessage(e.target.value);\n  };\n\n  const sendMessage = e => {\n    e.preventDefault();\n\n    if (message !== '') {\n      db.collection('posts').doc(id).collection('rooms').add({\n        message,\n        sender: activeUser,\n        seller: sellerName,\n        receiver: sellerName,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp()\n      });\n    }\n\n    setMessage('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Zoom, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              alt: activeUser === sellerName ? \"client\" : sellerName,\n              className: \"avatar\",\n              src: \"/static/images/avatar/1.jpg\",\n              onClick: () => {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: activeUser === sellerName ? \"client\" : sellerName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat\",\n          children: getMessages ? getMessages.map((msg, index) => {\n            var _msg$timestamp;\n\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: msg.sender === activeUser ? \"message_receiver\" : \"message\",\n              children: [\"   \", /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: msg.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: msg.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: new Date((_msg$timestamp = msg.timestamp) === null || _msg$timestamp === void 0 ? void 0 : _msg$timestamp.toDate()).toUTCString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this);\n          }) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-field\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            action: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"\",\n              id: \"\",\n              placeholder: activeUser !== sellerName ? `Type a message to ${sellerName}` : 'Type a message to the Client',\n              value: message,\n              onChange: hundleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              onClick: sendMessage,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"far fa-paper-plane\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 22\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Room, \"ngBUvk2rlmmUqOQmalzIvXqqt7g=\", false, function () {\n  return [useParams];\n});\n\n_c = Room;\nexport default Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["C:/Users/Electro-Marke.ma/Documents/React-JS/market-place-app/src/components/contactRoom/Room.js"],"names":["React","useState","useEffect","useContext","useParams","Avatar","db","SideBarContext","Zoom","firebase","Room","sellerName","setSellerName","value2","activeUser","setActiveUser","message","setMessage","getMessages","setGetMessages","valid","setValid","id","content","collection","doc","onSnapshot","snapshot","data","username","getData","orderBy","docs","map","timestamp","push","hundleChange","e","target","value","sendMessage","preventDefault","add","sender","seller","receiver","firestore","FieldValue","serverTimestamp","msg","index","name","Date","toDate","toUTCString"],"mappings":"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","sourcesContent":["import React,{useState,useEffect,useContext} from 'react';\r\nimport './room.css';\r\nimport { useParams } from 'react-router-dom';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {db} from '../../Firebase';\r\nimport {SideBarContext} from '../../contexts/SideBarContext';\r\nimport Zoom from 'react-reveal/Zoom';\r\nimport firebase from 'firebase/compat';\r\n\r\n\r\n\r\n\r\nfunction Room() {\r\n    const [sellerName,setSellerName] = useState('');\r\n    const {value2} = useContext(SideBarContext);\r\n    const [activeUser,setActiveUser] = value2;\r\n    const [message,setMessage] = useState('');\r\n    const [getMessages,setGetMessages] = useState([]);\r\n    const [valid,setValid] = useState(true)\r\n    \r\n    \r\n\r\n    let {id} = useParams();\r\n\r\n    let content = [] \r\n   \r\n    useEffect(()=>{\r\n        db.collection('posts')\r\n        .doc(id).onSnapshot( snapshot => {\r\n            setSellerName(snapshot.data().username)    \r\n        });\r\n        \r\n        \r\n        \r\n        \r\n\r\n        return () => {\r\n            setSellerName('');\r\n            \r\n        }\r\n\r\n    },[id])\r\n\r\n    const getData = async()=>{\r\n        db.collection('posts').doc(id).collection('rooms')\r\n        .orderBy('timestamp','asc')\r\n        .onSnapshot(snapshot => snapshot.docs.map(doc => {\r\n                if(activeUser || doc.data().timestamp ){\r\n                    // if((doc.data().sender.toLowerCase() === activeUser.toLowerCase()) ||\r\n                    // (doc.data().sender.toLowerCase() === sellerName.toLowerCase())){\r\n\r\n                        \r\n                            content.push(doc.data())        \r\n                            \r\n                            setGetMessages([doc.data(),...content])\r\n                        \r\n                    \r\n                            \r\n                        \r\n                       \r\n                    // }\r\n        \r\n                }\r\n                return getMessages\r\n                \r\n        }))\r\n    }\r\n    useEffect(()=>{\r\n        getData()\r\n\r\n    },[id])\r\n\r\n\r\n    const hundleChange = (e)=> {\r\n        // e.preventDefault();\r\n        setMessage(e.target.value)\r\n\r\n    }\r\n    const sendMessage = (e)=>{\r\n        e.preventDefault();\r\n        if(message !==''){\r\n            db.collection('posts').doc(id).collection('rooms').add({\r\n                message,\r\n                sender : activeUser,\r\n                seller : sellerName,\r\n                receiver : sellerName,\r\n                timestamp : firebase.firestore.FieldValue.serverTimestamp()\r\n            })\r\n        }\r\n        \r\n        setMessage('');\r\n    }\r\n   \r\n    return (\r\n        <div className='container'>\r\n        <Zoom>\r\n            <div className=\"room_container\">\r\n                <div className=\"header\">\r\n                    <div>\r\n                        <Avatar \r\n                                alt={activeUser === sellerName ? \"client\" : sellerName }\r\n                                className='avatar'\r\n                                src=\"/static/images/avatar/1.jpg\"\r\n                                onClick={ ()=> { \r\n                                    \r\n                                    \r\n                                    }}\r\n                        />\r\n                    </div>\r\n                    <h3>{activeUser === sellerName ? \"client\" : sellerName }</h3>\r\n                    \r\n                </div>\r\n                <div className=\"chat\">\r\n                    {getMessages ?(\r\n                        getMessages.map((msg,index) => {\r\n                           \r\n                            return(\r\n                            <div \r\n                            className={msg.sender === activeUser ? \"message_receiver\" : \"message\"}\r\n                            key={index}\r\n                            >   <h4>{msg.name}</h4>\r\n                                <p>{msg.message}</p>\r\n                                <span>\r\n                                {new Date(\r\n                                msg.timestamp?.toDate()\r\n                                ).toUTCString()\r\n                                }\r\n                                </span>\r\n\r\n                            </div>\r\n\r\n                        )\r\n                        \r\n\r\n                    } )\r\n                        \r\n\r\n                    ):null}\r\n                                \r\n                </div>\r\n                <div className=\"text-field\">\r\n                <form action=\"\">\r\n                <input type=\"text\" name=\"\" id=\"\" \r\n                    placeholder={activeUser !== sellerName ? `Type a message to ${sellerName}` : 'Type a message to the Client'} \r\n                    value={message}\r\n                    onChange={hundleChange}\r\n                    />\r\n                    <button type='submit' onClick={sendMessage}>\r\n                     <i className=\"far fa-paper-plane\"></i>\r\n\r\n                    </button>\r\n                    \r\n                </form>\r\n                    \r\n                </div>\r\n\r\n            </div>\r\n        </Zoom>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Room\r\n"]},"metadata":{},"sourceType":"module"}