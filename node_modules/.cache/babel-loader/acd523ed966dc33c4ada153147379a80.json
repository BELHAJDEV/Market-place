{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Electro-Marke.ma\\\\Documents\\\\React-JS\\\\market-place-app\\\\src\\\\components\\\\clientRoom\\\\ClientRoom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport './clientRoom.css';\nimport { db } from '../../Firebase';\nimport { SideBarContext } from '../../contexts/SideBarContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ClientRoom() {\n  _s();\n\n  const [getIds, setGetIds] = useState([]);\n  const [getMessages, setGetMessages] = useState([]);\n  const {\n    value2\n  } = useContext(SideBarContext);\n  const [activeUser, setActiveUser] = value2;\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    db.collection('posts').orderBy('timestamp', 'asc').onSnapshot(snapshot => {\n      setGetIds(snapshot.docs.map(doc => {\n        // console.log(doc.data());\n        return doc.id;\n      }));\n    });\n  }, []); // useEffect(()=>{\n  //     while(getIds !== []){\n  //         getIds.forEach(id => {\n  //             db.collection('posts')\n  //             .doc(id)\n  //             .collection('rooms')\n  //             .orderBy('timestamp','asc')\n  //             .onSnapshot(snapshot =>{\n  //                 setGetMessages(snapshot.docs.map(doc => doc.data()))\n  //             })\n  //         })\n  //     }\n  // })\n\n  useEffect(() => {\n    if (getIds.length !== 0) {\n      for (let i = 0; i < getIds.length; i++) {\n        db.collection('posts').doc(getIds[i]).collection('rooms').orderBy('timestamp', 'asc').onSnapshot(snapshot => snapshot.docs.map(doc => setGetMessages(doc.data())));\n        console.log(getMessages);\n      }\n    }\n  }, [getIds]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: getMessages.map((msg, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"sender : \", msg.sender, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 46\n        }, this), \"msg : \", msg.message, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 44\n        }, this), \"receiver : \", msg.receiver]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 20\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ClientRoom, \"U5vrSNfISJz6OWcldF/UVnKWk0I=\");\n\n_c = ClientRoom;\nexport default ClientRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientRoom\");","map":{"version":3,"sources":["C:/Users/Electro-Marke.ma/Documents/React-JS/market-place-app/src/components/clientRoom/ClientRoom.js"],"names":["React","useState","useEffect","useContext","db","SideBarContext","ClientRoom","getIds","setGetIds","getMessages","setGetMessages","value2","activeUser","setActiveUser","message","setMessage","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","length","i","data","console","log","msg","index","sender","receiver"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,EAAiCC,UAAjC,QAAkD,OAAlD;AACA,OAAO,kBAAP;AACA,SAAQC,EAAR,QAAiB,gBAAjB;AACA,SAAQC,cAAR,QAA6B,+BAA7B;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAClB,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBP,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACQ,WAAD,EAAaC,cAAb,IAA+BT,QAAQ,CAAC,EAAD,CAA7C;AAEA,QAAM;AAACU,IAAAA;AAAD,MAAWR,UAAU,CAACE,cAAD,CAA3B;AACA,QAAM,CAACO,UAAD,EAAYC,aAAZ,IAA6BF,MAAnC;AACA,QAAM,CAACG,OAAD,EAASC,UAAT,IAAuBd,QAAQ,CAAC,EAAD,CAArC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACVE,IAAAA,EAAE,CAACY,UAAH,CAAc,OAAd,EAAuBC,OAAvB,CAA+B,WAA/B,EAA2C,KAA3C,EACCC,UADD,CACYC,QAAQ,IAAG;AACnBX,MAAAA,SAAS,CAACW,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkBC,GAAG,IAAI;AAC/B;AACA,eAAOA,GAAG,CAACC,EAAX;AAIH,OANS,CAAD,CAAT;AAOH,KATD;AAUH,GAXQ,EAWP,EAXO,CAAT,CARkB,CAoBlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AAEA;;AACArB,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGK,MAAM,CAACiB,MAAP,KAAkB,CAArB,EAAwB;AACpB,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAcA,CAAC,GAAClB,MAAM,CAACiB,MAAvB,EAA+BC,CAAC,EAAhC,EAAmC;AAC/BrB,QAAAA,EAAE,CAACY,UAAH,CAAc,OAAd,EAAuBM,GAAvB,CAA2Bf,MAAM,CAACkB,CAAD,CAAjC,EACCT,UADD,CACY,OADZ,EACqBC,OADrB,CAC6B,WAD7B,EACyC,KADzC,EAECC,UAFD,CAEaC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkBC,GAAG,IAAIZ,cAAc,CAACY,GAAG,CAACI,IAAJ,EAAD,CAAvC,CAFzB;AAIIC,QAAAA,OAAO,CAACC,GAAR,CAAYnB,WAAZ;AAEP;AAKJ;AAKJ,GAnBQ,EAmBP,CAACF,MAAD,CAnBO,CAAT;AAsBA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACIE,WAAW,CAACY,GAAZ,CAAgB,CAACQ,GAAD,EAAKC,KAAL,KAAa;AAC1B,0BACI;AAAA,gCACcD,GAAG,CAACE,MADlB,oBAC0B;AAAA;AAAA;AAAA;AAAA,gBAD1B,YAEWF,GAAG,CAACf,OAFf,oBAEwB;AAAA;AAAA;AAAA;AAAA,gBAFxB,iBAGgBe,GAAG,CAACG,QAHpB;AAAA,SAAUF,KAAV;AAAA;AAAA;AAAA;AAAA,cADJ;AAQH,KATA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GA1EQxB,U;;KAAAA,U;AA4ET,eAAeA,UAAf","sourcesContent":["import React,{useState,useEffect,useContext} from 'react';\r\nimport './clientRoom.css';\r\nimport {db} from '../../Firebase';\r\nimport {SideBarContext} from '../../contexts/SideBarContext';\r\n\r\nfunction ClientRoom() {\r\n    const [getIds,setGetIds] = useState([])\r\n    const [getMessages,setGetMessages] = useState([]);\r\n    \r\n    const {value2} = useContext(SideBarContext);\r\n    const [activeUser,setActiveUser] = value2;\r\n    const [message,setMessage] = useState('');\r\n\r\n    useEffect(()=>{\r\n        db.collection('posts').orderBy('timestamp','asc')\r\n        .onSnapshot(snapshot =>{\r\n            setGetIds(snapshot.docs.map(doc => {\r\n                // console.log(doc.data());\r\n                return doc.id\r\n                \r\n\r\n                \r\n            }))\r\n        })\r\n    },[])\r\n    // useEffect(()=>{\r\n    //     while(getIds !== []){\r\n    //         getIds.forEach(id => {\r\n    //             db.collection('posts')\r\n    //             .doc(id)\r\n    //             .collection('rooms')\r\n    //             .orderBy('timestamp','asc')\r\n    //             .onSnapshot(snapshot =>{\r\n    //                 setGetMessages(snapshot.docs.map(doc => doc.data()))\r\n    //             })\r\n\r\n\r\n    //         })\r\n            \r\n            \r\n    //     }\r\n        \r\n    // })\r\n    useEffect(()=>{\r\n        if(getIds.length !== 0) {\r\n            for(let i=0 ; i<getIds.length ;i++){\r\n                db.collection('posts').doc(getIds[i])\r\n                .collection('rooms').orderBy('timestamp','asc')\r\n                .onSnapshot( snapshot => snapshot.docs.map(doc => setGetMessages(doc.data())))\r\n\r\n                    console.log(getMessages)\r\n                    \r\n            }\r\n            \r\n\r\n            \r\n\r\n        }\r\n        \r\n        \r\n        \r\n\r\n    },[getIds])\r\n    \r\n\r\n    return (\r\n        <div className='container'>\r\n           {getMessages.map((msg,index)=>{\r\n               return(\r\n                   <div key={index}>\r\n                       sender : {msg.sender} <br />\r\n                       msg : {msg.message} <br/>\r\n                       receiver : {msg.receiver}\r\n\r\n                   </div>\r\n               )\r\n           })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClientRoom\r\n"]},"metadata":{},"sourceType":"module"}