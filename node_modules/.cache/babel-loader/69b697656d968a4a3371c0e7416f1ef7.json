{"ast":null,"code":"import _slicedToArray from\"C:/Users/Electro-Marke.ma/Documents/React-JS/market-place-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useContext}from'react';import'./clientRoom.css';import{db}from'../../Firebase';import{SideBarContext}from'../../contexts/SideBarContext';import Fade from'react-reveal/Fade';import{Link}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ClientRoom(){var _useContext=useContext(SideBarContext),value2=_useContext.value2;var _value=_slicedToArray(value2,2),activeUser=_value[0],setActiveUser=_value[1];var _useState=useState([]),_useState2=_slicedToArray(_useState,2),messages=_useState2[0],setMessages=_useState2[1];var getData=function getData(){db.collection('chats').orderBy('timestamp','desc').onSnapshot(function(snapshot){return setMessages(snapshot.docs.map(function(doc){if(activeUser&&doc.data().receiver.toLowerCase()===activeUser.toLowerCase()&&doc.data().seller.toLowerCase()===activeUser.toLowerCase()){return doc.data();}else{return null;}}));});};useEffect(function(){getData();return function(){return setMessages([]);};},[activeUser]);return/*#__PURE__*/_jsx(\"div\",{className:\"messages_container\",children:messages&&messages.map(function(msg,id){if(msg!=null&&Object.keys(msg).length!==0){return/*#__PURE__*/_jsx(Fade,{top:true,children:/*#__PURE__*/_jsx(Link,{to:\"/Post/\".concat(msg.productId,\"/\").concat(msg.sender,\"/Client\"),children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:msg.sender}),/*#__PURE__*/_jsx(\"p\",{children:msg.message})]})})},id);}})});}export default ClientRoom;","map":{"version":3,"sources":["C:/Users/Electro-Marke.ma/Documents/React-JS/market-place-app/src/components/clientRoom/ClientRoom.js"],"names":["React","useState","useEffect","useContext","db","SideBarContext","Fade","Link","ClientRoom","value2","activeUser","setActiveUser","messages","setMessages","getData","collection","orderBy","onSnapshot","snapshot","docs","map","doc","data","receiver","toLowerCase","seller","msg","id","Object","keys","length","productId","sender","message"],"mappings":"oLAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,CAAuBC,SAAvB,CAAiCC,UAAjC,KAAkD,OAAlD,CACA,MAAO,kBAAP,CACA,OAAQC,EAAR,KAAiB,gBAAjB,CACA,OAAQC,cAAR,KAA6B,+BAA7B,CACA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,CACA,OAASC,IAAT,KAAqB,kBAArB,C,wFAIA,QAASC,CAAAA,UAAT,EAAsB,CAGlB,gBAAiBL,UAAU,CAACE,cAAD,CAA3B,CAAOI,MAAP,aAAOA,MAAP,CACA,0BAAmCA,MAAnC,IAAOC,UAAP,WAAkBC,aAAlB,WAEA,cAA+BV,QAAQ,CAAC,EAAD,CAAvC,wCAAOW,QAAP,eAAgBC,WAAhB,eAGA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAI,CAEhBV,EAAE,CAACW,UAAH,CAAc,OAAd,EACCC,OADD,CACS,WADT,CACqB,MADrB,EAECC,UAFD,CAEY,SAAAC,QAAQ,QAChBL,CAAAA,WAAW,CAACK,QAAQ,CAACC,IAAT,CAAcC,GAAd,CACR,SAAAC,GAAG,CAAI,CACH,GAAGX,UAAU,EAGbW,GAAG,CAACC,IAAJ,GAAWC,QAAX,CAAoBC,WAApB,KAAsCd,UAAU,CAACc,WAAX,EAHnC,EAKAH,GAAG,CAACC,IAAJ,GAAWG,MAAX,CAAkBD,WAAlB,KAAoCd,UAAU,CAACc,WAAX,EALvC,CAMC,CAEG,MAAOH,CAAAA,GAAG,CAACC,IAAJ,EAAP,CACH,CATD,IAUI,CACA,MAAO,KAAP,CACH,CACJ,CAfO,CAAD,CADK,EAFpB,EAqBH,CAvBD,CAwBApB,SAAS,CAAC,UAAI,CACVY,OAAO,GACP,MAAO,kBAAMD,CAAAA,WAAW,CAAC,EAAD,CAAjB,EAAP,CAEH,CAJQ,CAIP,CAACH,UAAD,CAJO,CAAT,CAOA,mBACI,YAAK,SAAS,CAAC,oBAAf,UAGKE,QAAQ,EAAIA,QAAQ,CAACQ,GAAT,CAAa,SAACM,GAAD,CAAKC,EAAL,CAAY,CAElC,GAAGD,GAAG,EAAI,IAAP,EAAgBE,MAAM,CAACC,IAAP,CAAYH,GAAZ,EAAiBI,MAAjB,GAA4B,CAA/C,CAAkD,CAC9C,mBACA,KAAC,IAAD,EAAM,GAAG,KAAT,uBACI,KAAC,IAAD,EAAM,EAAE,iBAAWJ,GAAG,CAACK,SAAf,aAA4BL,GAAG,CAACM,MAAhC,WAAR,uBAEA,oCACI,oBAAKN,GAAG,CAACM,MAAT,EADJ,cAEI,mBAAIN,GAAG,CAACO,OAAR,EAFJ,GAFA,EADJ,EAAeN,EAAf,CADA,CAcH,CAIJ,CArBY,CAHjB,EADJ,CAsCH,CAED,cAAenB,CAAAA,UAAf","sourcesContent":["import React,{useState,useEffect,useContext} from 'react';\r\nimport './clientRoom.css';\r\nimport {db} from '../../Firebase';\r\nimport {SideBarContext} from '../../contexts/SideBarContext';\r\nimport Fade from 'react-reveal/Fade'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction ClientRoom() {\r\n    \r\n    \r\n    const {value2} = useContext(SideBarContext);\r\n    const [activeUser,setActiveUser] = value2;\r\n    \r\n    const [messages,setMessages] = useState([]);\r\n    \r\n\r\n    const getData = ()=>{\r\n       \r\n        db.collection('chats')\r\n        .orderBy('timestamp','desc')\r\n        .onSnapshot(snapshot => \r\n            setMessages(snapshot.docs.map(\r\n                doc => {\r\n                    if(activeUser \r\n                   \r\n                    && \r\n                    doc.data().receiver.toLowerCase() === activeUser.toLowerCase()\r\n\r\n                    && doc.data().seller.toLowerCase() === activeUser.toLowerCase() \r\n                    ){\r\n                       \r\n                        return doc.data()\r\n                    }\r\n                    else{\r\n                        return null\r\n                    }\r\n                } \r\n                \r\n        )))\r\n    }\r\n    useEffect(()=>{\r\n        getData();\r\n        return () => setMessages([])\r\n\r\n    },[activeUser])\r\n\r\n\r\n    return (\r\n        <div className='messages_container'>\r\n         \r\n            \r\n            {messages && messages.map((msg,id) => {\r\n\r\n                if(msg != null  && Object.keys(msg).length !== 0 ){\r\n                    return(\r\n                    <Fade top key={id}>\r\n                        <Link to={`/Post/${msg.productId}/${msg.sender}/Client`}>\r\n\r\n                        <div>\r\n                            <h3>{msg.sender}</h3>\r\n                            <p>{msg.message}</p>\r\n                        </div>\r\n                        </Link>\r\n                        \r\n                    \r\n                    \r\n                    </Fade>\r\n                    )\r\n                }\r\n                \r\n                \r\n                \r\n            }\r\n            \r\n            )}\r\n            \r\n            \r\n               \r\n           \r\n           \r\n\r\n\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClientRoom\r\n"]},"metadata":{},"sourceType":"module"}