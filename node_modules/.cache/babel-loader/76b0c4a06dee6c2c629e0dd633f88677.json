{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Electro-Marke.ma\\\\Documents\\\\React-JS\\\\market-place-app\\\\src\\\\components\\\\contactRoom\\\\Room.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport './room.css';\nimport { useParams } from 'react-router-dom';\nimport Avatar from '@material-ui/core/Avatar';\nimport { db } from '../../Firebase';\nimport { SideBarContext } from '../../contexts/SideBarContext';\nimport Zoom from 'react-reveal/Zoom';\nimport firebase from 'firebase/compat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Room() {\n  _s();\n\n  const [sellerName, setSellerName] = useState('');\n  const {\n    value2,\n    value3\n  } = useContext(SideBarContext);\n  const [activeUser, setActiveUser] = value2;\n  const [currentReceiver, setCurrentReceiver] = value3;\n  const [message, setMessage] = useState('');\n  const [getMessages, setGetMessages] = useState([]);\n  const [valid, setValid] = useState(true);\n  let {\n    id\n  } = useParams();\n  useEffect(() => {\n    db.collection('posts').doc(id).onSnapshot(snapshot => {\n      setSellerName(snapshot.data().username);\n    });\n  }, [id]);\n\n  const getData = () => {\n    db.collection('chats').orderBy('timestamp', 'asc').onSnapshot(snapshot => setGetMessages(snapshot.docs.map(doc => {\n      if (activeUser && (doc.data().sender.toLowerCase() === activeUser.toLowerCase() || doc.data().receiver.toLowerCase() === activeUser.toLowerCase() || doc.data().sender.toLowerCase() === sellerName.toLowerCase()) && doc.data().productId === id) {\n        return doc.data();\n      } else {\n        return null;\n      }\n    })));\n  };\n\n  useEffect(() => {\n    getData();\n  }, [id, activeUser, sellerName, currentReceiver]);\n  useEffect(() => {\n    cons;\n  }, []);\n\n  const hundleChange = e => {\n    setMessage(e.target.value);\n  };\n\n  const sendMessage = e => {\n    e.preventDefault();\n\n    if (message !== '') {\n      db.collection('chats').add({\n        productId: id,\n        message,\n        sender: activeUser,\n        seller: sellerName,\n        receiver: sellerName,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp()\n      });\n    }\n\n    setMessage('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Zoom, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              alt: activeUser === sellerName ? \"client\" : sellerName,\n              className: \"avatar\",\n              src: \"/static/images/avatar/1.jpg\",\n              onClick: () => {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: activeUser === sellerName ? \"client\" : sellerName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat\",\n          id: \"chat\",\n          children: getMessages && getMessages.map((msg, index) => {\n            var _msg$timestamp;\n\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: msg !== null && msg.sender.toLowerCase() === activeUser.toLowerCase() ? \"message_receiver\" : \"message\",\n              children: [\"   \", /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: msg ? msg.name : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: msg ? msg.message : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: msg ? new Date((_msg$timestamp = msg.timestamp) === null || _msg$timestamp === void 0 ? void 0 : _msg$timestamp.toDate()).toUTCString() : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 45\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 41\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-field\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            action: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"\",\n              id: \"\",\n              placeholder: activeUser !== sellerName ? `Type a message to ${sellerName}` : 'Type a message to the Client',\n              value: message,\n              onChange: hundleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              onClick: sendMessage,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"far fa-paper-plane\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 22\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Room, \"7teYlq/Rd0bXJ7AN/OLN9mnIKV4=\", false, function () {\n  return [useParams];\n});\n\n_c = Room;\nexport default Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["C:/Users/Electro-Marke.ma/Documents/React-JS/market-place-app/src/components/contactRoom/Room.js"],"names":["React","useState","useEffect","useContext","useRef","useParams","Avatar","db","SideBarContext","Zoom","firebase","Room","sellerName","setSellerName","value2","value3","activeUser","setActiveUser","currentReceiver","setCurrentReceiver","message","setMessage","getMessages","setGetMessages","valid","setValid","id","collection","doc","onSnapshot","snapshot","data","username","getData","orderBy","docs","map","sender","toLowerCase","receiver","productId","cons","hundleChange","e","target","value","sendMessage","preventDefault","add","seller","timestamp","firestore","FieldValue","serverTimestamp","msg","index","name","Date","toDate","toUTCString"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,EAAiCC,UAAjC,EAA4CC,MAA5C,QAAyD,OAAzD;AACA,OAAO,YAAP;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAAQC,EAAR,QAAiB,gBAAjB;AACA,SAAQC,cAAR,QAA6B,+BAA7B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,QAAP,MAAqB,iBAArB;;;AAKA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAM,CAACC,UAAD,EAAYC,aAAZ,IAA6BZ,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM;AAACa,IAAAA,MAAD;AAAQC,IAAAA;AAAR,MAAkBZ,UAAU,CAACK,cAAD,CAAlC;AACA,QAAM,CAACQ,UAAD,EAAYC,aAAZ,IAA6BH,MAAnC;AACA,QAAM,CAACI,eAAD,EAAiBC,kBAAjB,IAAuCJ,MAA7C;AACA,QAAM,CAACK,OAAD,EAASC,UAAT,IAAuBpB,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACqB,WAAD,EAAaC,cAAb,IAA+BtB,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAACuB,KAAD,EAAOC,QAAP,IAAmBxB,QAAQ,CAAC,IAAD,CAAjC;AAIA,MAAI;AAACyB,IAAAA;AAAD,MAAOrB,SAAS,EAApB;AAIAH,EAAAA,SAAS,CAAC,MAAI;AACVK,IAAAA,EAAE,CAACoB,UAAH,CAAc,OAAd,EACCC,GADD,CACKF,EADL,EACSG,UADT,CACqBC,QAAQ,IAAI;AAC7BjB,MAAAA,aAAa,CAACiB,QAAQ,CAACC,IAAT,GAAgBC,QAAjB,CAAb;AACH,KAHD;AAUH,GAXQ,EAWP,CAACN,EAAD,CAXO,CAAT;;AAaA,QAAMO,OAAO,GAAG,MAAI;AAEhB1B,IAAAA,EAAE,CAACoB,UAAH,CAAc,OAAd,EACCO,OADD,CACS,WADT,EACqB,KADrB,EAECL,UAFD,CAEYC,QAAQ,IAChBP,cAAc,CAACO,QAAQ,CAACK,IAAT,CAAcC,GAAd,CACXR,GAAG,IAAI;AACH,UAAGZ,UAAU,KACRY,GAAG,CAACG,IAAJ,GAAWM,MAAX,CAAkBC,WAAlB,OAAoCtB,UAAU,CAACsB,WAAX,EAApC,IAEDV,GAAG,CAACG,IAAJ,GAAWQ,QAAX,CAAoBD,WAApB,OAAsCtB,UAAU,CAACsB,WAAX,EAFrC,IAIDV,GAAG,CAACG,IAAJ,GAAWM,MAAX,CAAkBC,WAAlB,OAAoC1B,UAAU,CAAC0B,WAAX,EAL3B,CAAV,IAOKV,GAAG,CAACG,IAAJ,GAAWS,SAAX,KAAyBd,EAPjC,EAOoC;AAGhC,eAAOE,GAAG,CAACG,IAAJ,EAAP;AACH,OAXD,MAYI;AACA,eAAO,IAAP;AACH;AACJ,KAjBU,CAAD,CAHlB;AAuBH,GAzBD;;AA0BA7B,EAAAA,SAAS,CAAC,MAAI;AAEV+B,IAAAA,OAAO;AAGV,GALQ,EAKP,CAACP,EAAD,EAAIV,UAAJ,EAAeJ,UAAf,EAA0BM,eAA1B,CALO,CAAT;AAMAhB,EAAAA,SAAS,CAAC,MAAI;AACVuC,IAAAA,IAAI;AACP,GAFQ,EAEP,EAFO,CAAT;;AAIA,QAAMC,YAAY,GAAIC,CAAD,IAAM;AACvBtB,IAAAA,UAAU,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AAEH,GAHD;;AAIA,QAAMC,WAAW,GAAIH,CAAD,IAAK;AACrBA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAG3B,OAAO,KAAI,EAAd,EAAiB;AACbb,MAAAA,EAAE,CAACoB,UAAH,CAAc,OAAd,EAAuBqB,GAAvB,CAA2B;AACvBR,QAAAA,SAAS,EAAGd,EADW;AAEvBN,QAAAA,OAFuB;AAGvBiB,QAAAA,MAAM,EAAGrB,UAHc;AAIvBiC,QAAAA,MAAM,EAAGrC,UAJc;AAKvB2B,QAAAA,QAAQ,EAAG3B,UALY;AAMvBsC,QAAAA,SAAS,EAAGxC,QAAQ,CAACyC,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B;AANW,OAA3B;AAQH;;AAEDhC,IAAAA,UAAU,CAAC,EAAD,CAAV;AAEH,GAfD;;AAiBA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACA,QAAC,IAAD;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,kCACI;AAAA,mCACI,QAAC,MAAD;AACQ,cAAA,GAAG,EAAEL,UAAU,KAAKJ,UAAf,GAA4B,QAA5B,GAAuCA,UADpD;AAEQ,cAAA,SAAS,EAAC,QAFlB;AAGQ,cAAA,GAAG,EAAC,6BAHZ;AAIQ,cAAA,OAAO,EAAG,MAAK,CAGV;AAPb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAYI;AAAA,sBAAKI,UAAU,KAAKJ,UAAf,GAA4B,QAA5B,GAAuCA;AAA5C;AAAA;AAAA;AAAA;AAAA,kBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAgBI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAsB,UAAA,EAAE,EAAC,MAAzB;AAAA,oBAESU,WAAW,IAAIA,WAAW,CAACc,GAAZ,CAAgB,CAACkB,GAAD,EAAKC,KAAL,KAAe;AAAA;;AAEvC,gCACQ;AAEA,cAAA,SAAS,EAAED,GAAG,KAAK,IAAR,IAAgBA,GAAG,CAACjB,MAAJ,CAAWC,WAAX,OAA6BtB,UAAU,CAACsB,WAAX,EAA7C,GAAwE,kBAAxE,GAA6F,SAFxG;AAAA,6CAII;AAAA,0BAAKgB,GAAG,GAAGA,GAAG,CAACE,IAAP,GAAa;AAArB;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAA,0BAAIF,GAAG,GAAGA,GAAG,CAAClC,OAAP,GAAiB;AAAxB;AAAA;AAAA;AAAA;AAAA,sBALJ,eAMI;AAAA,0BACCkC,GAAG,GAAG,IAAIG,IAAJ,mBACPH,GAAG,CAACJ,SADG,mDACP,eAAeQ,MAAf,EADO,EAELC,WAFK,EAAH,GAGH;AAJD;AAAA;AAAA;AAAA;AAAA,sBANJ;AAAA,eAGKJ,KAHL;AAAA;AAAA;AAAA;AAAA,oBADR;AAoBX,WAtBmB;AAFxB;AAAA;AAAA;AAAA;AAAA,gBAhBJ,eA8CI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACA;AAAM,YAAA,MAAM,EAAC,EAAb;AAAA,oCACA;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,IAAI,EAAC,EAAxB;AAA2B,cAAA,EAAE,EAAC,EAA9B;AACI,cAAA,WAAW,EAAEvC,UAAU,KAAKJ,UAAf,GAA6B,qBAAoBA,UAAW,EAA5D,GAAgE,8BADjF;AAEI,cAAA,KAAK,EAAEQ,OAFX;AAGI,cAAA,QAAQ,EAAEsB;AAHd;AAAA;AAAA;AAAA;AAAA,oBADA,eAMI;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,OAAO,EAAEI,WAA/B;AAAA,qCACC;AAAG,gBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBA9CJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqEH;;GA1JQnC,I;UAWMN,S;;;KAXNM,I;AA4JT,eAAeA,IAAf","sourcesContent":["import React,{useState,useEffect,useContext,useRef} from 'react';\r\nimport './room.css';\r\nimport { useParams } from 'react-router-dom';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {db} from '../../Firebase';\r\nimport {SideBarContext} from '../../contexts/SideBarContext';\r\nimport Zoom from 'react-reveal/Zoom';\r\nimport firebase from 'firebase/compat';\r\n\r\n\r\n\r\n\r\nfunction Room() {\r\n    const [sellerName,setSellerName] = useState('');\r\n    const {value2,value3} = useContext(SideBarContext);\r\n    const [activeUser,setActiveUser] = value2;\r\n    const [currentReceiver,setCurrentReceiver] = value3;\r\n    const [message,setMessage] = useState('');\r\n    const [getMessages,setGetMessages] = useState([]);\r\n    const [valid,setValid] = useState(true)\r\n    \r\n    \r\n\r\n    let {id} = useParams();\r\n\r\n  \r\n\r\n    useEffect(()=>{\r\n        db.collection('posts')\r\n        .doc(id).onSnapshot( snapshot => {\r\n            setSellerName(snapshot.data().username)    \r\n        });\r\n        \r\n        \r\n        \r\n        \r\n\r\n\r\n    },[id])\r\n    \r\n    const getData = ()=>{\r\n       \r\n        db.collection('chats')\r\n        .orderBy('timestamp','asc')\r\n        .onSnapshot(snapshot => \r\n            setGetMessages(snapshot.docs.map(\r\n                doc => {\r\n                    if(activeUser && \r\n                        (doc.data().sender.toLowerCase() === activeUser.toLowerCase()\r\n                        ||\r\n                        doc.data().receiver.toLowerCase() === activeUser.toLowerCase()\r\n                        ||\r\n                        doc.data().sender.toLowerCase() === sellerName.toLowerCase()\r\n                        \r\n                        )&& doc.data().productId === id){\r\n                            \r\n                       \r\n                        return doc.data()\r\n                    }\r\n                    else{\r\n                        return null\r\n                    }\r\n                } \r\n                \r\n        )))\r\n    }\r\n    useEffect(()=>{\r\n        \r\n        getData()\r\n        \r\n\r\n    },[id,activeUser,sellerName,currentReceiver])\r\n    useEffect(()=>{\r\n        cons\r\n    },[])\r\n\r\n    const hundleChange = (e)=> {\r\n        setMessage(e.target.value)\r\n\r\n    }\r\n    const sendMessage = (e)=>{\r\n        e.preventDefault();\r\n        if(message !==''){\r\n            db.collection('chats').add({\r\n                productId : id,\r\n                message,\r\n                sender : activeUser,\r\n                seller : sellerName,\r\n                receiver : sellerName,\r\n                timestamp : firebase.firestore.FieldValue.serverTimestamp()\r\n            })\r\n        }\r\n        \r\n        setMessage('');\r\n        \r\n    }\r\n   \r\n    return (\r\n        <div className='container'>\r\n        <Zoom>\r\n            <div className=\"room_container\">\r\n                <div className=\"header\">\r\n                    <div>\r\n                        <Avatar \r\n                                alt={activeUser === sellerName ? \"client\" : sellerName }\r\n                                className='avatar'\r\n                                src=\"/static/images/avatar/1.jpg\"\r\n                                onClick={ ()=> { \r\n                                    \r\n                                    \r\n                                    }}\r\n                        />\r\n                    </div>\r\n                    <h3>{activeUser === sellerName ? \"client\" : sellerName }</h3>\r\n                    \r\n                </div>\r\n                <div className=\"chat\" id='chat' >\r\n                   \r\n                        {getMessages && getMessages.map((msg,index) => {\r\n\r\n                                return(\r\n                                        <div \r\n                                        \r\n                                        className={msg !== null && msg.sender.toLowerCase() === activeUser.toLowerCase() ? \"message_receiver\" : \"message\"}\r\n                                        key={index}\r\n                                        >   <h4>{msg ? msg.name :null}</h4>\r\n                                            <p>{msg ? msg.message : null}</p>\r\n                                            <span>\r\n                                            {msg ? new Date(\r\n                                            msg.timestamp?.toDate()\r\n                                            ).toUTCString()\r\n                                            :null}\r\n                                            </span>\r\n\r\n                                        </div>\r\n\r\n                                )\r\n                            \r\n                            \r\n                        \r\n                    } )}\r\n                        \r\n\r\n                    \r\n                                \r\n                </div>\r\n                <div className=\"text-field\">\r\n                <form action=\"\">\r\n                <input type=\"text\" name=\"\" id=\"\" \r\n                    placeholder={activeUser !== sellerName ? `Type a message to ${sellerName}` : 'Type a message to the Client'} \r\n                    value={message}\r\n                    onChange={hundleChange}\r\n                    />\r\n                    <button type='submit' onClick={sendMessage}>\r\n                     <i className=\"far fa-paper-plane\"></i>\r\n\r\n                    </button>\r\n                    \r\n                </form>\r\n                    \r\n                </div>\r\n\r\n            </div>\r\n        </Zoom>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Room\r\n"]},"metadata":{},"sourceType":"module"}