[{"C:\\Users\\Electro-Marke.ma\\Documents\\React-JS\\market-place-app\\src\\index.js":"1","C:\\Users\\Electro-Marke.ma\\Documents\\React-JS\\market-place-app\\src\\App.js":"2","C:\\Users\\Electro-Marke.ma\\Documents\\React-JS\\market-place-app\\src\\components\\Header\\Header.js":"3","C:\\Users\\Electro-Marke.ma\\Documents\\React-JS\\market-place-app\\src\\Firebase.js":"4","C:\\Users\\Electro-Marke.ma\\Documents\\React-JS\\market-place-app\\src\\components\\Posts\\Posts.js":"5","C:\\Users\\Electro-Marke.ma\\Documents\\React-JS\\market-place-app\\src\\components\\posts\\Posts.js":"6","C:\\Users\\Electro-Marke.ma\\Documents\\React-JS\\market-place-app\\src\\contexts\\SidebarContext.js":"7","C:\\Users\\Electro-Marke.ma\\Documents\\React-JS\\market-place-app\\src\\contexts\\SideBarContext.js":"8","C:\\Users\\Electro-Marke.ma\\Documents\\React-JS\\market-place-app\\src\\components\\addPost\\AddPost.js":"9","C:\\Users\\Electro-Marke.ma\\Documents\\React-JS\\market-place-app\\src\\components\\PostsDetails\\PostDetail.js":"10","C:\\Users\\Electro-Marke.ma\\Documents\\React-JS\\market-place-app\\src\\components\\contactRoom\\Room.js":"11","C:\\Users\\Electro-Marke.ma\\Documents\\React-JS\\market-place-app\\src\\components\\clientRoom\\ClientRoom.js":"12","C:\\Users\\Electro-Marke.ma\\Documents\\React-JS\\market-place-app\\src\\components\\replyRoom\\Reply.js":"13","C:\\Users\\Electro-Marke.ma\\Documents\\React-JS\\market-place-app\\src\\components\\myPosts\\MyPosts.js":"14","C:\\Users\\Electro-Marke.ma\\Documents\\React-JS\\market-place-app\\src\\components\\Edit\\Edit.js":"15"},{"size":218,"mtime":1640735411933,"results":"16","hashOfConfig":"17"},{"size":1877,"mtime":1644432727773,"results":"18","hashOfConfig":"17"},{"size":12101,"mtime":1647883264197,"results":"19","hashOfConfig":"17"},{"size":644,"mtime":1644357285112,"results":"20","hashOfConfig":"17"},{"size":1570,"mtime":1641372721660,"results":"21","hashOfConfig":"17"},{"size":1017,"mtime":1640454025502,"results":"22","hashOfConfig":"23"},{"size":88,"mtime":1640444869313,"results":"24","hashOfConfig":"23"},{"size":88,"mtime":1640444869313,"results":"25","hashOfConfig":"17"},{"size":5126,"mtime":1647883040642,"results":"26","hashOfConfig":"17"},{"size":2377,"mtime":1642440163568,"results":"27","hashOfConfig":"17"},{"size":5883,"mtime":1642293316912,"results":"28","hashOfConfig":"17"},{"size":2246,"mtime":1642295194642,"results":"29","hashOfConfig":"17"},{"size":6417,"mtime":1642795499883,"results":"30","hashOfConfig":"17"},{"size":4090,"mtime":1643659041002,"results":"31","hashOfConfig":"17"},{"size":4957,"mtime":1647883153326,"results":"32","hashOfConfig":"17"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3mkf7y",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"p9chbk",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},"C:\\Users\\Electro-Marke.ma\\Documents\\React-JS\\market-place-app\\src\\index.js",[],"C:\\Users\\Electro-Marke.ma\\Documents\\React-JS\\market-place-app\\src\\App.js",[],"C:\\Users\\Electro-Marke.ma\\Documents\\React-JS\\market-place-app\\src\\components\\Header\\Header.js",["72","73"],"import React from 'react';\r\nimport './header.css';\r\nimport {useState,useEffect,useContext} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {auth} from '../../Firebase'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { SideBarContext } from '../../contexts/SideBarContext';\r\n// import Typical from 'react-typical';\r\n\r\n\r\n\r\nfunction Header() {\r\n\r\n    const [open,setOpen] = useState(false);\r\n    const [openSide,setOpenSide] = useState(false);\r\n    const [text,setText] = useState('');\r\n    const [openSignIn ,setOpenSignIn] = useState(false);\r\n    const [openSignUp ,setOpenSignUp] = useState(false);\r\n    \r\n    const [username,setUsername] = useState('');\r\n    const [email,setEmail] = useState('');\r\n    const [password,setPassword] = useState('');\r\n    const [user,setUser] = useState(null);\r\n    const [getName,setGetName] = useState('');\r\n    const [close,setClose]= useState(false);\r\n\r\n    const {value1,value2,value3} = useContext(SideBarContext);\r\n    const [fixHeight,setFixHeight] = value1;\r\n    const [activeUser,setActiveUser] = value2;\r\n\r\n    useEffect(()=> {\r\n        console.log('chafik !!')\r\n        const unsubscribe = auth.onAuthStateChanged((authUser)=> {\r\n          if(authUser) {\r\n            // user has logged in\r\n            \r\n            setUser(authUser);    \r\n            setGetName(authUser.displayName);\r\n            setActiveUser(authUser.displayName);\r\n            \r\n                  \r\n          }else{\r\n            //  user has slogged out\r\n            setUser(null)\r\n            \r\n          }\r\n        })\r\n        return () => {\r\n          unsubscribe();\r\n          \r\n        }\r\n      },[user,username,setActiveUser])\r\n\r\n    useEffect(()=>{\r\n        setFixHeight(close);\r\n\r\n    },[fixHeight,close,setFixHeight]) \r\n     \r\n\r\n    const login = (e)=> {\r\n        e.preventDefault();\r\n        // console.log(text);\r\n        setText('');\r\n\r\n        \r\n\r\n    }\r\n    const signIn = (e)=>{\r\n        e.preventDefault();\r\n\r\n        \r\n        auth\r\n        .signInWithEmailAndPassword(email,password)\r\n        .catch((error)=> alert(error.message))\r\n        setOpenSignIn(false);\r\n        setClose(false);\r\n    }\r\n    async function signUp (e){\r\n        e.preventDefault();\r\n        \r\n            await auth.createUserWithEmailAndPassword(email,password)\r\n            .then((authUser) => {\r\n                return authUser.user.updateProfile({\r\n                displayName : username,\r\n              });\r\n            \r\n              \r\n              \r\n            })\r\n            .catch((error) => alert(error.message) );\r\n            \r\n        \r\n        setOpenSignUp(false);\r\n        // console.log(getName);\r\n        setClose(false);\r\n        window.location.reload();\r\n       \r\n        \r\n        \r\n    }\r\n    \r\n    \r\n    \r\n\r\n    \r\n    \r\n    return (\r\n        \r\n\r\n            <div className={close === false ? 'header': 'header of'}>\r\n        \r\n        \r\n\r\n            <div className=\"header__container\">\r\n                <div className=\"logo\">\r\n                <Link to='/' className='logo' onClick={()=>{\r\n                    setOpenSide(false);\r\n                    setClose(false)\r\n                }}>\r\n                    <i className=\"fas fa-store\"></i>\r\n                    <h3>\r\n                    \r\n                    Market place\r\n            \r\n                    </h3>\r\n                </Link>\r\n                \r\n                </div>\r\n            <div className=\"search\">\r\n                <form action=\"\">\r\n\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder='Search an item ... (Not Yet)'\r\n                    value={text}\r\n                    onChange={(e)=>setText(e.target.value)}\r\n                 />\r\n                 <button type=\"submit\" onClick={login}>\r\n                 <i className=\"fas fa-search\"></i>\r\n\r\n                 </button>\r\n                \r\n\r\n                </form>\r\n                \r\n            </div>\r\n\r\n            {/*  */}\r\n            {user ? (\r\n                <div className='right_container'>\r\n                    <div className='logout' onClick={()=> auth.signOut()}>\r\n                        <i className=\"fas fa-sign-out-alt\"></i>\r\n                    </div>\r\n                    <div>\r\n                        <Avatar \r\n                            alt={getName}  \r\n                            className='avatar'\r\n                            src=\"/static/images/avatar/1.jpg\"\r\n                            onClick={ ()=> { \r\n                                console.log(getName);\r\n                                setClose(!close)\r\n                                setOpenSide(true);\r\n                                \r\n                                }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                \r\n                \r\n            ):(\r\n            \r\n            <div className=\"auth\">\r\n\r\n                <div className=\"link sign_in\"\r\n                onClick={()=>{\r\n                    setOpenSignUp(false);\r\n                    setOpenSignIn(true);\r\n                    setClose(true);\r\n                    \r\n                }}>\r\n                    <h3>Sign In</h3>\r\n                </div>\r\n                \r\n                <div className=\"link sign_up\"\r\n                 onClick={()=>{\r\n                    setOpenSignIn(false);\r\n                    setOpenSignUp(true);\r\n                    setClose(true);\r\n\r\n                }} >\r\n                    <h3>Sign up</h3>\r\n                </div>\r\n\r\n                <i className=\"fas fa-bars\" onClick={() => {\r\n\r\n                setOpen(!open);\r\n                setClose(!close);\r\n\r\n                \r\n                }}></i>\r\n            </div>\r\n\r\n            )}\r\n            \r\n            {open === true ? (\r\n                <div className=\"auth-mobile\">\r\n                <div className=\"signIn\" onClick={() => {\r\n                    setOpen(false);\r\n                    setOpenSignUp(false);\r\n                    setOpenSignIn(true);\r\n                    setClose(true);\r\n                    \r\n\r\n                }}>\r\n                    <Link to=''>\r\n                        Sign In\r\n                    </Link>\r\n                    \r\n                </div>\r\n                <div className=\"signUp\"\r\n                    onClick={()=> {\r\n                        setOpen(false);\r\n                        setOpenSignIn(false);\r\n                        setOpenSignUp(true);\r\n                    setClose(true);\r\n\r\n\r\n                        }}\r\n                >\r\n                    <Link to=''>\r\n                        Sign Up\r\n                    </Link>\r\n                </div>\r\n                </div>\r\n\r\n            ): null}\r\n\r\n            {/*  */}\r\n\r\n            <div className={openSide === false ? \"sidebar\" : 'sidebar on'}>\r\n            <div className=\"sidebar_header\">\r\n                <div className='profil'>\r\n                    <Avatar alt={getName} \r\n                        className='avatar'\r\n                        src=\"/static/images/avatar/1.jpg\"\r\n                        onClick={()=> console.log(user.displayName)}\r\n                    />\r\n                    <h4>{getName}</h4>\r\n                </div>\r\n                        \r\n                <div className=\"close_icon\" onClick={()=>\r\n                {\r\n                    setOpenSide(false);\r\n                    setClose(false)\r\n                    \r\n                }}>\r\n                    <i className='fas fa-times'></i>\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"features\">\r\n                <div className=\"add_post\" onClick={()=> {\r\n                    setOpenSide(false);\r\n                    setClose(false);\r\n                }}>\r\n                    <Link to='/addPost' >\r\n                    <i className='fa fa-plus-square'></i>\r\n                    <h4>Add post</h4>\r\n                    </Link>\r\n                    \r\n                </div>\r\n\r\n                <div className=\"my-posts\"\r\n                onClick={()=> {\r\n                    setOpenSide(false);\r\n                    setClose(false);\r\n                }}\r\n                >\r\n                <Link to='/myPosts'>\r\n                    <i className=\"fas fa-book-reader\"></i>\r\n                    <h4>Your posts</h4>\r\n                </Link>\r\n                </div>\r\n                \r\n                <div className=\"msgs\"\r\n                onClick={()=> {\r\n                    setOpenSide(false);\r\n                    setClose(false);\r\n                }}\r\n                >\r\n                <Link to='/Inbox'>\r\n                    <i className=\"fas fa-envelope\"></i>\r\n                    <h4>Inbox</h4>\r\n                </Link>\r\n                </div>\r\n\r\n                {/* <div className=\"reviews\"\r\n                onClick={()=> {\r\n                    setOpenSide(false);\r\n                    setClose(false);\r\n                }}\r\n\r\n                >\r\n\r\n                    <Link to='/Reviews'>\r\n                    <i className=\"far fa-star\"></i>\r\n                    <h4>Your reviews</h4>\r\n                    </Link>\r\n                </div> */}\r\n                <div className='logout' onClick={()=>{\r\n                    auth.signOut();\r\n                    setOpenSide(false);\r\n                    setClose(false);\r\n                    \r\n                }\r\n                }>\r\n                        <i className=\"fas fa-sign-out-alt\"></i>\r\n                        <h4>Logout</h4>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n            \r\n        </div>\r\n            \r\n        </div>\r\n        <div className=\"login\">\r\n        {openSignIn === true ? (\r\n            \r\n            <div className='signIn_container'>\r\n            <form>\r\n            <h3>Sign In</h3>\r\n            <i className='fas fa-times' onClick={()=>{\r\n                    setClose(false);\r\n                    setOpenSignIn(false);\r\n                    }}></i>\r\n            <div className=\"email\">\r\n                <h4>Email</h4>\r\n                <input type=\"email\" placeholder='email..' value={email} onChange={(e)=> setEmail(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"pass\">\r\n                <h4>Password</h4>\r\n                <input type=\"password\" placeholder='Password'\r\n                    value={password} onChange={(e)=> setPassword(e.target.value)}\r\n                />\r\n\r\n            </div>\r\n            <button \r\n                type=\"submit\"\r\n                onClick={signIn}>\r\n                Sign in</button>\r\n        </form>\r\n        \r\n            </div>\r\n        ):null}\r\n        {openSignUp === true ? (\r\n\r\n        \r\n            <div className='signUp_container'>\r\n    \r\n                <form>\r\n                    <h3>Sign Up</h3>\r\n                    <i className='fas fa-times' onClick={()=> {\r\n                        setClose(false);\r\n                        setOpenSignUp(false)\r\n                    }}></i>\r\n\r\n                    <div className='username'>\r\n                        <h4>Username</h4>\r\n                        <input type=\"text\"\r\n                            placeholder='Username'\r\n                            value={username} onChange={(e)=>setUsername(e.target.value)}\r\n                            />\r\n                        \r\n                    </div>\r\n                    <div className=\"email\">\r\n                        <h4>Email</h4>\r\n                        <input type=\"email\" placeholder='email'\r\n                        value={email} onChange={(e)=> setEmail(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"pass\">\r\n                        <h4>Password</h4>\r\n                        <input type=\"password\" placeholder='Password'\r\n                        value={password} onChange={(e)=> setPassword(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <button type=\"submit\" onClick={signUp}>Sign Up</button>\r\n                </form>    \r\n            </div>\r\n        ):null}\r\n        </div>\r\n    \r\n            </div>\r\n           \r\n\r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\Electro-Marke.ma\\Documents\\React-JS\\market-place-app\\src\\Firebase.js",[],"C:\\Users\\Electro-Marke.ma\\Documents\\React-JS\\market-place-app\\src\\components\\Posts\\Posts.js",[],"C:\\Users\\Electro-Marke.ma\\Documents\\React-JS\\market-place-app\\src\\components\\posts\\Posts.js",[],["74","75"],"C:\\Users\\Electro-Marke.ma\\Documents\\React-JS\\market-place-app\\src\\contexts\\SidebarContext.js",[],"C:\\Users\\Electro-Marke.ma\\Documents\\React-JS\\market-place-app\\src\\contexts\\SideBarContext.js",[],"C:\\Users\\Electro-Marke.ma\\Documents\\React-JS\\market-place-app\\src\\components\\addPost\\AddPost.js",["76","77"],"import React,{useState,useContext} from 'react';\r\nimport './addPost.css';\r\nimport {SideBarContext} from '../../contexts/SideBarContext';\r\nimport {storage,db} from '../../Firebase';\r\nimport firebase from 'firebase/compat';\r\nimport { Zoom } from 'react-reveal';\r\nimport {Link,useNavigate} from 'react-router-dom'\r\n\r\nfunction AddPost() {\r\n\r\n    const [imagesSelected,setImagesSelected] = useState([]);\r\n    const [imagesName,setImagesName] = useState([])\r\n    const {value2} = useContext(SideBarContext);  \r\n    const [activeUser,setActiveUser] = value2;\r\n    const [title,setTitle] = useState('');\r\n    const [price,setPrice] = useState('');\r\n    const [category,setCategory] = useState('');\r\n    const [place,setPlace] = useState('');\r\n\r\n    const navigate = useNavigate()\r\n\r\n\r\n    let i =-1;\r\n    const hundleSelect = ()=> {\r\n        let input = document.getElementById('file');\r\n        input.click();\r\n        i++;    \r\n    }\r\n\r\n    const hundleChange = (e) =>{\r\n        \r\n        if(e.target.value !== ''){\r\n    \r\n            setImagesSelected([e.target.files[i],...imagesSelected]);\r\n            setImagesName([e.target.files[i].name,...imagesName])\r\n                     \r\n        }\r\n    }\r\n    \r\n   \r\n   let j = 0\r\n   let content = [];\r\n   const Add = async()=> {\r\n       await db.collection('posts').add({\r\n           productName : title,\r\n           price,\r\n           imagesUrl : content,\r\n           username : activeUser,\r\n           place,\r\n           category,\r\n           timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n\r\n\r\n       });\r\n       setImagesSelected([])\r\n       navigate('/')\r\n       \r\n   }\r\n    const saveArticle = async(e)=>{\r\n        e.preventDefault();\r\n        \r\n        \r\n         imagesSelected.map( async (image) => { \r\n            \r\n            await storage.ref(`images/${image.name}`).put(image);\r\n            await storage.ref('images').child(image.name).getDownloadURL().then(\r\n                url => {\r\n                    content.unshift(url);\r\n                    j++;\r\n                })\r\n        \r\n           \r\n            if(j === imagesSelected.length) {\r\n                Add()\r\n            }\r\n           \r\n        })\r\n        \r\n    \r\n        setPlace('');\r\n        setTitle('');\r\n        setCategory('');\r\n        setPrice('');\r\n        \r\n\r\n    }\r\n    \r\n    return (\r\n        \r\n        <Zoom>\r\n        <div className=\"my_container\">\r\n        \r\n        <input type=\"file\" className='file'\r\n            onChange={hundleChange}\r\n            name=\"\" id=\"file\" />\r\n\r\n        \r\n            <div className='add_container'>\r\n            <h3>Add a Post</h3>\r\n\r\n            <div className=\"data_container\"\r\n            onClick={hundleSelect}\r\n            >\r\n                  {imagesSelected.length === 0 ? \r\n                        (\r\n\r\n                        <>\r\n                        <i className=\"fas fa-folder-plus\"></i>\r\n                        <h4>Add images</h4>\r\n                        </>\r\n                        )\r\n                      \r\n                    \r\n                  :\r\n                      (\r\n                        <h4 className='imgs_number'>{imagesSelected.length}+</h4>\r\n                        )\r\n                      \r\n                    \r\n                  }  \r\n\r\n            </div>\r\n            <div className=\"details\">\r\n                <form action=\"\">\r\n                    <div className=\"title\">\r\n                        <input type=\"text\" placeholder='Title' name=\"\" id=\"\" value={title}\r\n                            onChange={(e)=> setTitle(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"price\">\r\n                    <input type=\"text\" placeholder='Price' name=\"\" id=\"\" \r\n                         value={price}\r\n                        onChange={(e)=> setPrice(e.target.value)}\r\n                    />\r\n\r\n                    </div>\r\n                    <div className=\"category\">\r\n                    <input type=\"text\" placeholder='Category' name=\"\" id=\"\" \r\n                         value={category}\r\n                        onChange={(e)=> setCategory(e.target.value)}\r\n                    />\r\n                        <i className=\"fas fa-caret-down\"></i>             \r\n                    </div>\r\n                    <div className=\"place\">\r\n                        <input type=\"text\" placeholder='Place' name=\"\" id=\"\"\r\n                        value={place}\r\n                        onChange={(e)=> setPlace(e.target.value)}\r\n                         />\r\n                        <i className=\"fas fa-map-marker-alt\"></i>\r\n                    </div>\r\n\r\n                    <div className=\"save_article\">\r\n                        <button type='submit' onClick={saveArticle}>\r\n                        {/* <Link to='/'> */}\r\n                        Publish\r\n                        {/* </Link> */}\r\n                        </button>\r\n                    </div>\r\n\r\n                    \r\n                </form>\r\n            </div>\r\n\r\n        \r\n            </div>\r\n            \r\n        </div>\r\n        \r\n        </Zoom>\r\n        \r\n    )\r\n    }\r\n\r\nexport default AddPost\r\n","C:\\Users\\Electro-Marke.ma\\Documents\\React-JS\\market-place-app\\src\\components\\PostsDetails\\PostDetail.js",["78"],"import React,{useState,useEffect,useContext} from 'react';\r\nimport './postDetail.css';\r\nimport { useParams } from 'react-router-dom';\r\nimport {db} from '../../Firebase';\r\nimport Zoom from 'react-reveal/Zoom'\r\nimport {Link} from 'react-router-dom';\r\nimport {SideBarContext} from '../../contexts/SideBarContext';\r\nimport Slider from \"react-slick\";\r\n\r\n\r\n\r\n\r\nfunction PostDetail() {\r\n    let {id} = useParams();\r\n    const [postDetail,setPostDetail] = useState({});\r\n    const [sellerName,setSellerName] = useState('');\r\n    const {value2} = useContext(SideBarContext);\r\n    const [activeUser,setActiveUser] = value2;\r\n\r\n    \r\n\r\n    useEffect(()=>{\r\n        db.collection('posts')\r\n        .doc(id).onSnapshot( snapshot => {\r\n            setPostDetail(snapshot.data());\r\n            setSellerName(snapshot.data().username)\r\n     \r\n        });\r\n        \r\n\r\n    },[id]);\r\n \r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1\r\n      };\r\n    return (\r\n \r\n        <Zoom>\r\n        \r\n        {activeUser && sellerName !== activeUser ? (\r\n            <div className=\"contact\">\r\n                <Link to={`/Post/${id}/ContactRoom`}>\r\n                    Contact Seller\r\n                </Link>\r\n            </div>\r\n\r\n        ):(<div></div>)}\r\n\r\n       {activeUser ? ( \r\n        <div className='post_detail_container'>\r\n        \r\n        <Slider {...settings} className='slider_two'>\r\n        {Object.keys(postDetail).length !== 0  ? (\r\n            postDetail.imagesUrl.map((url,index) => {\r\n                return (\r\n                    \r\n\r\n                  \r\n                   <div className='post_img' key={index}>\r\n                        \r\n                            <img src={url} alt=\"\" />      \r\n                                \r\n                    </div>\r\n                                 \r\n                    \r\n                    \r\n                )\r\n            })\r\n               \r\n        ):null}\r\n        \r\n        \r\n        </Slider>    \r\n        </div>\r\n        ):(\r\n            <div className='err_login'>\r\n            <h1><i className=\"fas fa-exclamation-triangle\"></i></h1>\r\n                <h1>You have to Login</h1>\r\n                \r\n            </div>\r\n        )}\r\n        \r\n        \r\n        </Zoom>\r\n\r\n       \r\n    \r\n       \r\n\r\n    )\r\n}\r\n\r\nexport default PostDetail\r\n","C:\\Users\\Electro-Marke.ma\\Documents\\React-JS\\market-place-app\\src\\components\\contactRoom\\Room.js",["79","80","81","82","83","84","85","86","87","88"],"import React,{useState,useEffect,useContext,useRef} from 'react';\r\nimport './room.css';\r\nimport { useParams } from 'react-router-dom';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {db} from '../../Firebase';\r\nimport {SideBarContext} from '../../contexts/SideBarContext';\r\nimport Zoom from 'react-reveal/Zoom';\r\nimport firebase from 'firebase/compat';\r\n\r\n\r\n\r\n\r\nfunction Room() {\r\n    const [sellerName,setSellerName] = useState('');\r\n    const {value2,value3} = useContext(SideBarContext);\r\n    const [activeUser,setActiveUser] = value2;\r\n    const [currentReceiver,setCurrentReceiver] = value3;\r\n    const [message,setMessage] = useState('');\r\n    const [getMessages,setGetMessages] = useState([]);\r\n    const [valid,setValid] = useState(true)\r\n    const [rec,setRec] = useState('')\r\n    \r\n    \r\n\r\n    let {id} = useParams();\r\n\r\n  \r\n\r\n    useEffect(()=>{\r\n        db.collection('posts')\r\n        .doc(id).onSnapshot( snapshot => {\r\n            setSellerName(snapshot.data().username)\r\n            setRec(activeUser)\r\n              \r\n        });\r\n        \r\n        \r\n        \r\n        \r\n\r\n\r\n    },[id])\r\n    \r\n    const getData = ()=>{\r\n       \r\n        db.collection('chats')\r\n        .orderBy('timestamp','asc')\r\n        .onSnapshot(snapshot => \r\n            setGetMessages(snapshot.docs.map(\r\n                doc => {\r\n                    \r\n                    if(activeUser && \r\n                        (\r\n                        (doc.data().sender.toLowerCase() === activeUser.toLowerCase()\r\n                        &&\r\n                      \r\n                        doc.data().productId === id\r\n                        )\r\n                        ||\r\n                        (\r\n                        doc.data().receiver.toLowerCase() === activeUser.toLowerCase()\r\n                        &&\r\n                        doc.data().seller.toLowerCase() === doc.data().sender.toLowerCase()\r\n                        &&\r\n                        doc.data().productId === id\r\n                        \r\n                        )\r\n                        \r\n                        \r\n                        \r\n                        )){\r\n                            \r\n                       \r\n                        return doc.data()\r\n                    }\r\n                    else{\r\n                        return null\r\n                    }\r\n                } \r\n                \r\n        )))\r\n    }\r\n    useEffect(()=>{\r\n        \r\n        getData()\r\n        \r\n\r\n    },[id,activeUser,sellerName])\r\n\r\n\r\n\r\n\r\n    const hundleChange = (e)=> {\r\n        setMessage(e.target.value)\r\n\r\n    }\r\n    const sendMessage = (e)=>{\r\n        e.preventDefault();\r\n        if(message !==''){\r\n            db.collection('chats').add({\r\n                productId : id,\r\n                message,\r\n                sender : activeUser,\r\n                seller : sellerName,\r\n                receiver : sellerName,\r\n                timestamp : firebase.firestore.FieldValue.serverTimestamp()\r\n            })\r\n        }\r\n        \r\n        setMessage('');\r\n        \r\n    }\r\n   \r\n    return (\r\n        <div className='container'>\r\n        <Zoom>\r\n            <div className=\"room_container\">\r\n                <div className=\"header\">\r\n                    <div>\r\n                        <Avatar \r\n                                alt={activeUser === sellerName ? \"client\" : sellerName }\r\n                                className='avatar'\r\n                                src=\"/static/images/avatar/1.jpg\"\r\n                                onClick={ ()=> { \r\n                                    \r\n                                    \r\n                                    }}\r\n                        />\r\n                    </div>\r\n                    <h3>{activeUser === sellerName ? \"client\" : sellerName }</h3>\r\n                    \r\n                </div>\r\n                <div className=\"chat\" id='chat' >\r\n                   \r\n                        {getMessages && getMessages.map((msg,index) => {\r\n                            if(msg){\r\n                                return(\r\n                                        <div \r\n                                        \r\n                                        className={msg !== null && msg.sender.toLowerCase() === activeUser.toLowerCase() ? \"message_receiver\" : \"message\"}\r\n                                        key={index}\r\n                                        >   <h4>{msg ? msg.name :null}</h4>\r\n                                            <p>{msg ? msg.message : null}</p>\r\n                                            <span>\r\n                                            {msg ? new Date(\r\n                                            msg.timestamp?.toDate()\r\n                                            ).toUTCString()\r\n                                            :null}\r\n                                            </span>\r\n\r\n                                        </div>\r\n\r\n                                )}\r\n                            \r\n                            \r\n                        \r\n                    } )}\r\n                        \r\n\r\n                    \r\n                                \r\n                </div>\r\n                <div className=\"text-field\">\r\n                <form action=\"\">\r\n                <input type=\"text\" name=\"\" id=\"\" \r\n                    placeholder={activeUser !== sellerName ? `Type a message to ${sellerName}` : 'Type a message to the Client'} \r\n                    value={message}\r\n                    onChange={hundleChange}\r\n                    />\r\n                    <button type='submit' onClick={sendMessage}>\r\n                     <i className=\"far fa-paper-plane\"></i>\r\n\r\n                    </button>\r\n                    \r\n                </form>\r\n                    \r\n                </div>\r\n\r\n            </div>\r\n        </Zoom>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Room\r\n","C:\\Users\\Electro-Marke.ma\\Documents\\React-JS\\market-place-app\\src\\components\\clientRoom\\ClientRoom.js",["89","90","91"],"import React,{useState,useEffect,useContext} from 'react';\r\nimport './clientRoom.css';\r\nimport {db} from '../../Firebase';\r\nimport {SideBarContext} from '../../contexts/SideBarContext';\r\nimport Fade from 'react-reveal/Fade'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction ClientRoom() {\r\n    \r\n    \r\n    const {value2} = useContext(SideBarContext);\r\n    const [activeUser,setActiveUser] = value2;\r\n    \r\n    const [messages,setMessages] = useState([]);\r\n    \r\n\r\n    const getData = ()=>{\r\n       \r\n        db.collection('chats')\r\n        .orderBy('timestamp','desc')\r\n        .onSnapshot(snapshot => \r\n            setMessages(snapshot.docs.map(\r\n                doc => {\r\n                    if(activeUser \r\n                   \r\n                    && \r\n                    doc.data().receiver.toLowerCase() === activeUser.toLowerCase()\r\n\r\n                    && doc.data().seller.toLowerCase() === activeUser.toLowerCase() \r\n                    ){\r\n                       \r\n                        return doc.data()\r\n                    }\r\n                    else{\r\n                        return null\r\n                    }\r\n                } \r\n                \r\n        )))\r\n    }\r\n    useEffect(()=>{\r\n        getData();\r\n        return () => setMessages([])\r\n\r\n    },[activeUser])\r\n\r\n\r\n    return (\r\n        <div className='messages_container'>\r\n         \r\n            \r\n            {messages && messages.map((msg,id) => {\r\n\r\n                if(msg != null  && Object.keys(msg).length !== 0 ){\r\n                    return(\r\n                    <Fade top key={id}>\r\n                        <Link to={`/Post/${msg.productId}/${msg.sender}/Client`}>\r\n\r\n                        <div>\r\n                            <h3>{msg.sender}</h3>\r\n                            <p>{msg.message}</p>\r\n                        </div>\r\n                        </Link>\r\n                        \r\n                    \r\n                    \r\n                    </Fade>\r\n                    )\r\n                }\r\n                \r\n                \r\n                \r\n            }\r\n            \r\n            )}\r\n            \r\n            \r\n               \r\n           \r\n           \r\n\r\n\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClientRoom\r\n","C:\\Users\\Electro-Marke.ma\\Documents\\React-JS\\market-place-app\\src\\components\\replyRoom\\Reply.js",["92","93","94","95","96"],"import React,{useState,useEffect,useContext} from 'react';\r\nimport '../contactRoom/room.css'\r\nimport { useParams } from 'react-router-dom';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {db} from '../../Firebase';\r\nimport {SideBarContext} from '../../contexts/SideBarContext';\r\nimport Zoom from 'react-reveal/Zoom';\r\nimport firebase from 'firebase/compat';\r\n\r\nfunction Reply() {\r\n    const [sellerName,setSellerName] = useState('');\r\n    const {value2,value3} = useContext(SideBarContext);\r\n    const [activeUser,setActiveUser] = value2;\r\n    const [currentReceiver,setCurrentReceiver] = value3;\r\n    const [message,setMessage] = useState('');\r\n    const [getMessages,setGetMessages] = useState([]);\r\n    \r\n    \r\n    \r\n\r\n    let {id,client} = useParams();\r\n\r\n \r\n\r\n   \r\n    \r\n    const getData = ()=>{\r\n       \r\n        db.collection('chats')\r\n        .orderBy('timestamp','asc')\r\n        .onSnapshot(snapshot => \r\n            setGetMessages(snapshot.docs.map(\r\n                \r\n                doc => {\r\n                  \r\n                    if(activeUser &&\r\n                    \r\n                        (\r\n                        // this condition for showing the seller's messages\r\n                        (doc.data().sender.toLowerCase() === activeUser.toLowerCase()\r\n                        &&\r\n                        doc.data().receiver.toLowerCase() === client.toLowerCase()\r\n                        &&\r\n                        doc.data().seller.toLowerCase() === activeUser.toLowerCase()\r\n                        \r\n                        && doc.data().productId === id\r\n                        )\r\n\r\n                        ||\r\n                        \r\n                        \r\n                        (doc.data().sender.toLowerCase() === client.toLowerCase()\r\n                        && \r\n                        doc.data().receiver.toLowerCase() === activeUser.toLowerCase()\r\n                        && \r\n                        doc.data().seller.toLowerCase() === activeUser.toLowerCase()\r\n                        \r\n                        && doc.data().productId === id \r\n                        )\r\n                        \r\n                        \r\n                        )){\r\n                            \r\n                        \r\n                        return doc.data()\r\n                    }\r\n                    else{\r\n                        return null\r\n                    }\r\n                } \r\n                \r\n        ))\r\n        \r\n        )\r\n    }\r\n    useEffect(()=>{\r\n        \r\n        getData();\r\n    \r\n        \r\n\r\n    },[id,activeUser,sellerName,client]);\r\n\r\n    \r\n\r\n    const getReceiver = ()=>{\r\n\r\n        if(getMessages){\r\n            getMessages.forEach(msg =>{\r\n                if(msg && msg.sender.toLowerCase() !== activeUser.toLowerCase()){\r\n                    if(currentReceiver === ''){\r\n                        setCurrentReceiver(msg.sender)\r\n                    }\r\n                    \r\n                    \r\n                }\r\n                \r\n            })\r\n            \r\n        }\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    const hundleChange = (e)=> {\r\n        setMessage(e.target.value)\r\n\r\n    }\r\n    const sendMessage = (e)=>{\r\n        e.preventDefault();\r\n        if(message !==''){\r\n            db.collection('chats').add({\r\n                productId : id,\r\n                message,\r\n                sender : activeUser,\r\n                seller : activeUser,\r\n                receiver : client,\r\n                timestamp : firebase.firestore.FieldValue.serverTimestamp()\r\n            })\r\n        }\r\n        \r\n        setMessage('');\r\n        \r\n    }\r\n   \r\n    return (\r\n        <div className='container'>\r\n        \r\n        <Zoom>\r\n            <div className=\"room_container\">\r\n                <div className=\"header\">\r\n                    <div>\r\n                        <Avatar \r\n                                alt={client}\r\n                                className='avatar'\r\n                                src=\"/static/images/avatar/1.jpg\"\r\n                                onClick={ ()=> { \r\n                                    \r\n                                    \r\n                                    }}\r\n                        />\r\n                    </div>\r\n                    <h3>{client}</h3>\r\n                    \r\n                </div>\r\n                <div className=\"chat\" id='chat' >\r\n                   \r\n                        {getMessages && getMessages.map((msg,index) => {\r\n                                if(msg){\r\n\r\n                                \r\n                                return(\r\n                                        <div \r\n                                        \r\n                                        className={msg !== null && msg.sender.toLowerCase() === activeUser.toLowerCase() ? \"message_receiver\" : \"message\"}\r\n                                        key={index}\r\n                                        >   <h4>{msg ? msg.name :null}</h4>\r\n                                            <p>{msg ? msg.message : null}</p>\r\n                                            <span>\r\n                                            {msg ? new Date(\r\n                                            msg.timestamp?.toDate()\r\n                                            ).toUTCString()\r\n                                            :null}\r\n                                            </span>\r\n\r\n                                        </div>\r\n\r\n                                )}\r\n                            \r\n                            \r\n                        \r\n                    } )}\r\n                        \r\n\r\n                    \r\n                                \r\n                </div>\r\n                <div className=\"text-field\">\r\n                <form action=\"\">\r\n                <input type=\"text\" name=\"\" id=\"\" \r\n                    placeholder={activeUser !== sellerName ? `Type a message to ${sellerName}` : 'Type a message to the Client'} \r\n                    value={message}\r\n                    onChange={hundleChange}\r\n                    />\r\n                    <button type='submit' onClick={sendMessage}>\r\n                     <i className=\"far fa-paper-plane\"></i>\r\n\r\n                    </button>\r\n                    \r\n                </form>\r\n                    \r\n                </div>\r\n\r\n            </div>\r\n        </Zoom>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reply\r\n","C:\\Users\\Electro-Marke.ma\\Documents\\React-JS\\market-place-app\\src\\components\\myPosts\\MyPosts.js",["97","98","99","100","101","102","103","104","105"],"import React,{useState,useEffect,useContext} from 'react';\r\nimport './myPost.css';\r\nimport {db} from '../../Firebase';\r\nimport Zoom from 'react-reveal/Zoom';\r\nimport Slider from \"react-slick\";\r\nimport {Link,useNavigate} from 'react-router-dom';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport cap from '../../images/cap-1.jpg'\r\nimport cap2 from '../../images/cap-2.jpg'\r\nimport {SideBarContext} from '../../contexts/SideBarContext';\r\n\r\n\r\n\r\nfunction MyPosts() {\r\n    const [myPosts,setMyPosts] = useState([]);\r\n    const [on,setOn] = useState(false);\r\n    const {value2} = useContext(SideBarContext);\r\n    const [activeUser,setActiveUser] = value2;\r\n    const [ids,setIds] = useState([])\r\n    const navigate = useNavigate()\r\n    \r\n\r\nlet date = 0;\r\nlet item = '';\r\n\r\n    useEffect(()=>{\r\n        db.collection('posts').orderBy('timestamp','desc')\r\n        .onSnapshot(snapshot => \r\n            setIds(\r\n                snapshot.docs.map(doc => {\r\n                    if(activeUser && doc.data().username.toLowerCase() === activeUser.toLowerCase()){\r\n                        // console.log(doc.data().timestamp.seconds)\r\n                        \r\n                        return doc.id;\r\n                    }else{\r\n                        return null;\r\n                    }\r\n                })\r\n            ))\r\n            \r\n\r\n        db.collection('posts').orderBy('timestamp','desc')\r\n        .onSnapshot(snapshot => \r\n            setMyPosts(snapshot.docs.map(doc => {\r\n                if(activeUser && doc.data().username.toLowerCase() === activeUser.toLowerCase()){\r\n                    // console.log(doc.data().timestamp.seconds)\r\n                    \r\n                    return doc.data();\r\n                }else{\r\n                    return null;\r\n                }\r\n            })))        \r\n\r\n    },[activeUser])\r\n\r\n    const Delete = (id)=>{\r\n\r\n        db.collection('posts').doc(id).delete()\r\n        setOn(false)\r\n    }\r\n\r\n    const settings = {\r\n        dots: false,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1\r\n      };\r\n    return (\r\n        <div className='my_posts_container'>\r\n        {myPosts && ids && myPosts.map((post,id) =>{\r\n            if(post !== null){\r\n                \r\n                item = 0\r\n                date = new Date(post.timestamp.seconds);\r\n                \r\n                \r\n                 \r\n                return(\r\n\r\n               \r\n            <div className=\"my_post\" key={id}>\r\n                <div className=\"post_header\">\r\n                    <div className=\"right\">\r\n                    <Avatar \r\n                            alt={post.username ? post.username : ''}  \r\n                            className='avatar'\r\n                            src=\"/static/images/avatar/1.jpg\"\r\n                            />\r\n                        <h3>{post.username}</h3>\r\n                    </div>\r\n                    <div className=\"left\">\r\n                    <i className=\"far fa-edit\" onClick={()=> navigate(`/Post/${ids[id]}/Edit`)}/>\r\n                    <i className=\"far fa-trash-alt\" onClick={()=> Delete(ids[id])}></i>\r\n                    </div>\r\n                   \r\n                </div>\r\n                <div className=\"post_image\">\r\n                    <Slider {...settings} className='slider'>\r\n                    {Object.keys(post.imagesUrl).length !== 0 && post.imagesUrl.map((image,i) =>{\r\n                        return(\r\n                            <img key={i} src={image} alt=\"\" />\r\n                        )\r\n                    })}\r\n                    \r\n                    \r\n                    </Slider>\r\n                </div>\r\n                <div className=\"post_date\">\r\n                    <p>\r\n                    {post ? new Date(\r\n                    post.timestamp?.toDate()\r\n                    ).toUTCString()\r\n                    :null}\r\n                    </p>\r\n                    \r\n                </div>\r\n            </div>\r\n            )\r\n            }\r\n        })}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts\r\n","C:\\Users\\Electro-Marke.ma\\Documents\\React-JS\\market-place-app\\src\\components\\Edit\\Edit.js",["106"],"import React,{useState,useEffect,useContext} from 'react';\r\nimport './edit.css';\r\nimport {SideBarContext} from '../../contexts/SideBarContext';\r\nimport {storage,db} from '../../Firebase';\r\nimport firebase from 'firebase/compat';\r\nimport { Zoom } from 'react-reveal';\r\nimport {Link,useNavigate,useParams} from 'react-router-dom'\r\n\r\nfunction Edit() {\r\n    let {id} = useParams();\r\n    let navigate = useNavigate()\r\n    const [imagesSelected,setImagesSelected] = useState([]);\r\n    const [imagesName,setImagesName] = useState([])\r\n    const {value2} = useContext(SideBarContext);  \r\n    const [activeUser,setActiveUser] = value2;\r\n    const [title,setTitle] = useState('');\r\n    const [price,setPrice] = useState('');\r\n    const [category,setCategory] = useState('');\r\n    const [place,setPlace] = useState('');\r\n\r\n    useEffect(()=>{\r\n        db\r\n        .collection('posts')\r\n        .doc(id)\r\n        .onSnapshot( snapshot => {\r\n            setTitle(snapshot.data().productName);\r\n            setPrice(snapshot.data().price);\r\n            setPlace(snapshot.data().place);\r\n            setCategory(snapshot.data().category)\r\n        })\r\n        \r\n\r\n    },[id])\r\n\r\n    let i =-1;\r\n    const hundleSelect = ()=> {\r\n        let input = document.getElementById('file');\r\n        input.click();\r\n        i++;    \r\n    }\r\n\r\n    const hundleChange = (e) =>{\r\n        \r\n        if(e.target.value !== ''){\r\n    \r\n            setImagesSelected([e.target.files[i],...imagesSelected]);\r\n            setImagesName([e.target.files[i].name,...imagesName])\r\n                     \r\n        }\r\n    }\r\n\r\nlet j = 0\r\n   let content = [];\r\n   const Add = ()=> {\r\n       db.collection('posts').doc(id).set({\r\n           productName : title,\r\n           price,\r\n           imagesUrl : content,\r\n           username : activeUser,\r\n           place,\r\n           category,\r\n           timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n\r\n\r\n       });\r\n       setImagesSelected([])\r\n       navigate('/')\r\n       \r\n   }\r\n    const saveArticle = async(e)=>{\r\n        e.preventDefault();\r\n        \r\n        \r\n         imagesSelected.map( async (image) => { \r\n            \r\n            await storage.ref(`images/${image.name}`).put(image);\r\n            await storage.ref('images').child(image.name).getDownloadURL().then(\r\n                url => {\r\n                    content.unshift(url);\r\n                    j++;\r\n                })\r\n        \r\n           \r\n            if(j === imagesSelected.length) {\r\n                Add()\r\n            }\r\n           \r\n        })\r\n        \r\n    \r\n        setPlace('');\r\n        setTitle('');\r\n        setCategory('');\r\n        setPrice('');\r\n        \r\n\r\n    }\r\n\r\n    return (\r\n        <Zoom>\r\n        <div className=\"my_container\">\r\n        \r\n        <input type=\"file\" className='file'\r\n            onChange={hundleChange}\r\n            name=\"\" id=\"file\" />\r\n\r\n        \r\n            <div className='add_container'>\r\n            <h3>Edit Post</h3>\r\n\r\n            <div className=\"data_container\"\r\n            onClick={hundleSelect}\r\n            >\r\n                  <h4>{imagesSelected.length} Selected +</h4>\r\n\r\n            </div>\r\n            <div className=\"details\">\r\n                <form action=\"\">\r\n                    <div className=\"title\">\r\n                        <input type=\"text\" placeholder='Title' name=\"\" id=\"\" value={title}\r\n                            onChange={(e)=> setTitle(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"price\">\r\n                    <input type=\"text\" placeholder='Price' name=\"\" id=\"\" \r\n                         value={price}\r\n                        onChange={(e)=> setPrice(e.target.value)}\r\n                    />\r\n\r\n                    </div>\r\n                    <div className=\"category\">\r\n                    <input type=\"text\" placeholder='Category' name=\"\" id=\"\" \r\n                         value={category}\r\n                        onChange={(e)=> setCategory(e.target.value)}\r\n                    />\r\n                        <i className=\"fas fa-caret-down\"></i>             \r\n                    </div>\r\n                    <div className=\"place\">\r\n                        <input type=\"text\" placeholder='Place' name=\"\" id=\"\"\r\n                        value={place}\r\n                        onChange={(e)=> setPlace(e.target.value)}\r\n                         />\r\n                        <i className=\"fas fa-map-marker-alt\"></i>\r\n                    </div>\r\n\r\n                    <div className=\"save\">\r\n                        <button type='submit' onClick={saveArticle}>\r\n                        <Link to='/'>\r\n                        Edit\r\n                        </Link>\r\n                        </button>\r\n                    </div>\r\n\r\n                    \r\n                </form>\r\n            </div>\r\n\r\n        \r\n            </div>\r\n            \r\n        </div>\r\n        \r\n        </Zoom>\r\n    )\r\n}\r\n\r\nexport default Edit\r\n",{"ruleId":"107","severity":1,"message":"108","line":27,"column":26,"nodeType":"109","messageId":"110","endLine":27,"endColumn":32},{"ruleId":"107","severity":1,"message":"111","line":29,"column":12,"nodeType":"109","messageId":"110","endLine":29,"endColumn":22},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"107","severity":1,"message":"116","line":7,"column":9,"nodeType":"109","messageId":"110","endLine":7,"endColumn":13},{"ruleId":"107","severity":1,"message":"117","line":14,"column":23,"nodeType":"109","messageId":"110","endLine":14,"endColumn":36},{"ruleId":"107","severity":1,"message":"117","line":18,"column":23,"nodeType":"109","messageId":"110","endLine":18,"endColumn":36},{"ruleId":"107","severity":1,"message":"118","line":1,"column":45,"nodeType":"109","messageId":"110","endLine":1,"endColumn":51},{"ruleId":"107","severity":1,"message":"117","line":16,"column":23,"nodeType":"109","messageId":"110","endLine":16,"endColumn":36},{"ruleId":"107","severity":1,"message":"119","line":17,"column":12,"nodeType":"109","messageId":"110","endLine":17,"endColumn":27},{"ruleId":"107","severity":1,"message":"120","line":17,"column":28,"nodeType":"109","messageId":"110","endLine":17,"endColumn":46},{"ruleId":"107","severity":1,"message":"121","line":20,"column":12,"nodeType":"109","messageId":"110","endLine":20,"endColumn":17},{"ruleId":"107","severity":1,"message":"122","line":20,"column":18,"nodeType":"109","messageId":"110","endLine":20,"endColumn":26},{"ruleId":"107","severity":1,"message":"123","line":21,"column":12,"nodeType":"109","messageId":"110","endLine":21,"endColumn":15},{"ruleId":"124","severity":1,"message":"125","line":42,"column":7,"nodeType":"126","endLine":42,"endColumn":11,"suggestions":"127"},{"ruleId":"124","severity":1,"message":"128","line":88,"column":7,"nodeType":"126","endLine":88,"endColumn":33,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":135,"column":69,"nodeType":"132","messageId":"133","endLine":135,"endColumn":71},{"ruleId":"107","severity":1,"message":"117","line":14,"column":23,"nodeType":"109","messageId":"110","endLine":14,"endColumn":36},{"ruleId":"124","severity":1,"message":"128","line":47,"column":7,"nodeType":"126","endLine":47,"endColumn":19,"suggestions":"134"},{"ruleId":"130","severity":1,"message":"131","line":54,"column":48,"nodeType":"132","messageId":"133","endLine":54,"endColumn":50},{"ruleId":"107","severity":1,"message":"135","line":11,"column":23,"nodeType":"109","messageId":"110","endLine":11,"endColumn":36},{"ruleId":"107","severity":1,"message":"117","line":13,"column":23,"nodeType":"109","messageId":"110","endLine":13,"endColumn":36},{"ruleId":"124","severity":1,"message":"128","line":82,"column":7,"nodeType":"126","endLine":82,"endColumn":40,"suggestions":"136"},{"ruleId":"107","severity":1,"message":"137","line":86,"column":11,"nodeType":"109","messageId":"110","endLine":86,"endColumn":22},{"ruleId":"130","severity":1,"message":"131","line":149,"column":69,"nodeType":"132","messageId":"133","endLine":149,"endColumn":71},{"ruleId":"107","severity":1,"message":"138","line":4,"column":8,"nodeType":"109","messageId":"110","endLine":4,"endColumn":12},{"ruleId":"107","severity":1,"message":"116","line":6,"column":9,"nodeType":"109","messageId":"110","endLine":6,"endColumn":13},{"ruleId":"107","severity":1,"message":"139","line":8,"column":8,"nodeType":"109","messageId":"110","endLine":8,"endColumn":11},{"ruleId":"107","severity":1,"message":"140","line":9,"column":8,"nodeType":"109","messageId":"110","endLine":9,"endColumn":12},{"ruleId":"107","severity":1,"message":"141","line":16,"column":12,"nodeType":"109","messageId":"110","endLine":16,"endColumn":14},{"ruleId":"107","severity":1,"message":"117","line":18,"column":23,"nodeType":"109","messageId":"110","endLine":18,"endColumn":36},{"ruleId":"107","severity":1,"message":"142","line":23,"column":5,"nodeType":"109","messageId":"110","endLine":23,"endColumn":9},{"ruleId":"107","severity":1,"message":"143","line":24,"column":5,"nodeType":"109","messageId":"110","endLine":24,"endColumn":9},{"ruleId":"130","severity":1,"message":"131","line":71,"column":50,"nodeType":"132","messageId":"133","endLine":71,"endColumn":52},{"ruleId":"107","severity":1,"message":"117","line":15,"column":23,"nodeType":"109","messageId":"110","endLine":15,"endColumn":36},"no-unused-vars","'value3' is assigned a value but never used.","Identifier","unusedVar","'activeUser' is assigned a value but never used.","no-native-reassign",["144"],"no-negated-in-lhs",["145"],"'Link' is defined but never used.","'setActiveUser' is assigned a value but never used.","'useRef' is defined but never used.","'currentReceiver' is assigned a value but never used.","'setCurrentReceiver' is assigned a value but never used.","'valid' is assigned a value but never used.","'setValid' is assigned a value but never used.","'rec' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'activeUser'. Either include it or remove the dependency array.","ArrayExpression",["146"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["147"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["148"],"'setSellerName' is assigned a value but never used.",["149"],"'getReceiver' is assigned a value but never used.","'Zoom' is defined but never used.","'cap' is defined but never used.","'cap2' is defined but never used.","'on' is assigned a value but never used.","'date' is assigned a value but never used.","'item' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},"Update the dependencies array to be: [activeUser, id]",{"range":"158","text":"159"},"Update the dependencies array to be: [id, activeUser, sellerName, getData]",{"range":"160","text":"161"},"Update the dependencies array to be: [activeUser, getData]",{"range":"162","text":"163"},"Update the dependencies array to be: [id, activeUser, sellerName, client, getData]",{"range":"164","text":"165"},[1107,1111],"[activeUser, id]",[2478,2504],"[id, activeUser, sellerName, getData]",[1283,1295],"[activeUser, getData]",[2571,2604],"[id, activeUser, sellerName, client, getData]"]